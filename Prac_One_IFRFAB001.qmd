---
title: "Practical One"
author: Fabio Iafrate
format: html
editor: visual
---

# Practical One {style="text-align: center"}

## Task 1: Missing Values

> Find all rows in “airquality” that have missing values.

This was completed by using the **complete.cases()** function. The **complete.cases()** function checks to see if the rows have missing (NA) values returning *TRUE* if there are no missing values and *FALSE* otherwise.

```{r}
data(airquality) #load the data to see it better

missing_rows <- airquality[!complete.cases(airquality), ] #Find all NA rows
missing_rows_numbers <- as.character(rownames(missing_rows)) #Stores as numbers 
print(missing_rows_numbers) # Prints to display 

```

The code outputs the row numbers of the rows with missing values

## Task 2: Statistical Analysis of Ozone and Temperature

> Find mean, sd, min, max for each of temperature and ozone level.

This was accomplished in 4 steps:

-   Create vectors containing valid Ozone and Temperature values
-   Use the built in mean(), sd(), min() and max() functions on these vectors
-   Create vectors for each set of statistics
-   Create a data frame using these vectors to be displayed

```{r}
#Step 1
valid_ozone <- airquality$Ozone[complete.cases(airquality$Ozone)]
valid_temp <- airquality$Temp[complete.cases(airquality$Temp)]

#Step 2
mean_ozone <- mean(valid_ozone)
sd_ozone <- sd(valid_ozone)
min_ozone <- min(valid_ozone)
max_ozone <- max(valid_ozone)

mean_temp <- mean(valid_temp)
sd_temp <- sd(valid_temp)
min_temp <- min(valid_temp)
max_temp <- max(valid_temp)

#Step 3
ozone_stats <- c(mean_ozone, sd_ozone, min_ozone, max_ozone) #Vector for df
temp_stats <- c(mean_temp, sd_temp, min_temp, max_temp) #Vector for df

#Step 4
df <- data.frame(ozone_stats, temp_stats)
rownames(df) <- c("Mean", "SD", "Min", "Max")
colnames(df) <- c("Ozone", "Temperature")
print(df)
```

## Task 3: Linear Modelling Without Using lm()

> For linear regression, parameter estimates can be found as follows.
>
> $$
> \hat{\beta} = (X^TX)^{-1}X^TY
> $$Here, Y is the response variable, and X is the design matrix. The cars data (an R data set, also always available in R) contains two variables: speed and distance to stop. Fit a simple linear regression model to these data, i.e. find the estimates, using the equation above, and matrix calculations in R.

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).
